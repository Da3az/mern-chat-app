{"version":3,"sources":["redux/actions.js","components/Nav.js","components/User.js","components/Room.js","components/Add.js","components/Left.js","components/Chatroom.js","components/Right.js","components/Home.js","components/Login.js","components/App.js","redux/states.js","redux/store.js","redux/reducer.js","index.js"],"names":["setUser","name","type","payload","setRoomName","setMessages","messages","setAlert","message","setTarget","target","setUsers","users","setRooms","rooms","Nav","dispatch","useDispatch","user","useSelector","state","socket","history","useHistory","className","Icon","username","onClick","axios","post","id","emit","push","User","selectUser","currentUser","settingTarget","_id","roomname","roomName","then","res","data","length","catch","err","console","log","settingRoomName","e","currentTarget","connected","style","Room","room","edit","a","get","creator","removeRoom","Add","cancel","useState","setRoomname","document","getElementsByClassName","click","htmlFor","value","onChange","addRoom","Left","add","setAdd","setEdit","i","classList","remove","class","map","Chatroom","setMessage","chat","setChat","send","Date","now","targetId","sendMessage","userId","content","sender","senderName","receiver","date","toUTCString","useEffect","on","messageIn","roomMessage","roomId","sort","b","el","Right","path","Home","Login","loginEmail","setLoginEmail","loginPassword","setLoginPassword","registerEmail","setRegisterEmail","registerPassword","setRegisterPassword","userName","setUserName","switchMethod","bird","getElementById","loginParents","contains","j","element","parentNode","width","lastChild","preventDefault","email","password","registerSpan","error","loginSwitchers","addEventListener","onSubmit","login","required","register","App","alert","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","warn","initialState","require","io","guests","store","createStore","action","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0de910f2.chunk.js","sourcesContent":["const SET_USER = 'SET_USER'\r\nconst SET_ALERT = 'SET_ALERT'\r\nconst SET_TARGET = 'SET_TARGET'\r\nconst SET_ROOMS = 'SET_ROOMS'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_ROOM_NAME = 'SET_ROOM_NAME'\r\nconst SET_MESSAGES = 'SET_MESSAGES'\r\nconst SET_CHAT = 'SET_CHAT'\r\n\r\nexport function setUser(name){\r\n  return{\r\n    type:SET_USER,\r\n    payload:name\r\n  }\r\n}\r\n\r\nexport function setRoomName(name){\r\n  return{\r\n    type:SET_ROOM_NAME,\r\n    payload:name\r\n  }\r\n}\r\nexport function setMessages(messages){\r\n  return{\r\n    type:SET_MESSAGES,\r\n    payload:messages\r\n  }\r\n}\r\n\r\nexport function setAlert(message){\r\n  return{\r\n    type:SET_ALERT,\r\n    payload:message\r\n  }\r\n}\r\n\r\nexport function setTarget(target){\r\n  return{\r\n    type:SET_TARGET,\r\n    payload:target\r\n  }\r\n}\r\n\r\n\r\nexport function setUsers(users){\r\n  return{\r\n    type:SET_USERS,\r\n    payload:users\r\n  }\r\n}\r\n\r\nexport function setRooms(rooms){\r\n  return{\r\n    type:SET_ROOMS,\r\n    payload:rooms\r\n  }\r\n}\r\n\r\nexport function setChat(chat){\r\n  return{\r\n    type:SET_CHAT,\r\n    payload:chat\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport axios from 'axios';\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {setUser} from '../redux/actions'\r\nimport {useHistory} from 'react-router'\r\nimport Icon from '@material-ui/core/Icon';\r\nimport '../styles/Nav.css'\r\n\r\n\r\nexport default function Nav() {\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state.user)\r\n    const socket = useSelector(state => state.socket)\r\n    const history = useHistory()\r\n    function logout(){\r\n     axios.post('/user/logout',{id:user.id})\r\n     socket.emit('user-logout')\r\n     dispatch(setUser({state:false}))\r\n     history.push('/auth')\r\n    }\r\n     \r\n\r\n    return (\r\n        <div className = 'nav'>\r\n            <div className=\"nav__logo\">\r\n              <Icon className=\"fa fa-kiwi-bird \" ></Icon>\r\n            </div>\r\n            <div className=\"nav__navbar\">\r\n                <div className=\"nav__user\">Welome {\r\n                  user.username\r\n                }\r\n                </div>\r\n                \r\n                 <button className=\"mav__logout\" onClick = {() => logout()}>Log-out <Icon className=\"fa fa-sign-out-alt \" ></Icon> </button>\r\n                              \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {useHistory} from 'react-router'\r\nimport {setTarget,setRoomName,setMessages} from '../redux/actions'\r\nimport axios from 'axios'\r\nimport '../styles/User.css'\r\n\r\n\r\nexport default function User({user,selectUser}) {\r\n        const dispatch = useDispatch()\r\n        const history = useHistory()\r\n        const currentUser = useSelector(state => state.user)\r\n    \r\n        function settingRoomName(){\r\n          var roomname \r\n          if(currentUser.username > user.username){\r\n              roomname = currentUser.username + '&' +  user.username\r\n           }else{roomname = user.username + '&' + currentUser.username}\r\n          dispatch(setRoomName(roomname))\r\n          axios.post('/chat/messages',{roomName:roomname}).then((res => {\r\n            if(res.data.length) dispatch(setMessages(res.data))\r\n            else  dispatch(setMessages([0]))\r\n          })).catch(err => console.log(err))          \r\n       }\r\n\r\n        function settingTarget(){\r\n          const {_id,username} = user\r\n          history.push('/users/'+user.username)\r\n          settingRoomName()\r\n          dispatch(setTarget({\r\n            id:_id,\r\n            username,\r\n            type:\"user\"\r\n          }))\r\n          \r\n        }\r\n        \r\n        return (\r\n        <div key = {user._id} className='user' onClick={(e) => { selectUser(e.currentTarget);settingTarget()}}>\r\n          <p>{user.username}\r\n          {user.connected ? <span style = {{'background' : '#33d933'}}></span> : <span style = {{'background' : 'red'}}></span>}\r\n          </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport '../styles/Room.css'\r\nimport {useHistory} from 'react-router'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {setTarget,setRooms,setRoomName,setMessages} from '../redux/actions'\r\nimport Icon from '@material-ui/core/Icon';\r\nimport axios from 'axios'\r\n\r\nexport default function Room({room,selectUser,edit}) {\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const user= useSelector(state => state.user.username)\r\n    const socket = useSelector(state => state.socket)\r\n    const target = useSelector(state => state.target)\r\n     \r\n\r\n    function settingTarget(){\r\n        const {_id,roomname} = room\r\n        history.push('/rooms/'+room.roomname)\r\n        dispatch(setRoomName(roomname))\r\n        dispatch(setTarget({\r\n          id:_id,\r\n          roomname,\r\n          type:'room'\r\n        }))\r\n        axios.post('/chat/messages',{roomName:roomname}).then((res => {\r\n            if(res.data.length) dispatch(setMessages(res.data))\r\n            else  dispatch(setMessages([0]))\r\n        })).catch(err => console.log(err))        \r\n    }\r\n    \r\n    async function removeRoom(){\r\n        await axios.post('/chat/deleteroom',{roomname:room.roomname}).then(res => \r\n            {\r\n               axios.get('/chat/rooms').then(res => {\r\n                   dispatch(setRooms(res.data))\r\n                   if(room.roomname === target.roomname){history.push('/')}\r\n                }).catch(err => console.log(err))\r\n               socket.emit('rooms-change',room.roomname )\r\n             }\r\n            )\r\n    }\r\n    \r\n    return (\r\n        <div key = {room._id} className = 'user room' onClick = {(e) => { selectUser(e.currentTarget);settingTarget()}}>\r\n            <p>{room.roomname}</p>\r\n            {edit && room.creator === user && <button onClick = {() => removeRoom()}><Icon className=\"fa fa-minus \" ></Icon></button>}\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {setAlert ,setRooms} from '../redux/actions'\r\nimport axios from 'axios'\r\nimport '../styles/Add.css'\r\n\r\nexport default function Add({cancel}) {\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state.user.username)\r\n    const socket = useSelector(state => state.socket)\r\n    const [roomname,setRoomname] =  useState('')  \r\n    function click(e){\r\n        if(document.getElementsByClassName('add')[0] ===  e.target){\r\n            cancel()\r\n        }\r\n    }\r\n   \r\n    async function addRoom(e){\r\n        if(roomname.length < 4){\r\n            dispatch(setAlert({\r\n             type:'warning',\r\n             message:'Room name must be at least 4 letters'\r\n            }))\r\n        }else if(roomname.length > 10){\r\n            dispatch(setAlert({\r\n             type:'warning',\r\n             message:'Room name can\\'t have more than 10 letters'\r\n            }))\r\n        }else{  \r\n            await axios.post('/chat/addroom',{roomname,creator:user}).then(res => {\r\n                if (res.data.type !=='warning') {\r\n                    dispatch(setAlert(res.data)) ;\r\n                    cancel();\r\n                    axios.get('/chat/rooms').then(res => {dispatch(setRooms(res.data))}).catch(err => console.log(err))\r\n                    socket.emit('rooms-change')\r\n                }else {dispatch(setAlert(res.data))}\r\n            }).catch(err => console.log(err)) \r\n        }\r\n    }  \r\n    return (\r\n        <div className = 'add' onClick = {(e) => click(e)}>\r\n            <div className=\"add__container\">\r\n              <div className=\"add__form\">\r\n               <label htmlFor=\"\">Enter a name for the new room</label> \r\n              </div>\r\n              <input type=\"text\" value = {roomname} onChange = {(e) => setRoomname(e.target.value)}></input>\r\n              <button id = 'add__button' onClick = {(e) => addRoom(e)}>Add</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React , {useState} from 'react';\r\nimport {useSelector} from 'react-redux'\r\nimport User from './User'\r\nimport Room from './Room'\r\nimport Add from './Add'\r\nimport '../styles/Left.css'\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nexport default function Left() {\r\n    \r\n    const [add,setAdd] = useState(false)\r\n    const [edit,setEdit] = useState(false)\r\n    const users = useSelector(state => state.users)\r\n    const rooms = useSelector(state => state.rooms)\r\n    const id = useSelector(state => state.user.id)\r\n    function selectUser(user) {\r\n     let users = document.getElementsByClassName('user')\r\n     for (let i = 0; i < users.length; i++) {\r\n         const element = users[i];\r\n         element.classList.remove('user__selected')\r\n     }\r\n     user.classList.add('user__selected')\r\n    }\r\n\r\n    function cancel(e){\r\n       setAdd(!add)\r\n    }\r\n          \r\n    return (\r\n        <div className = 'left'>\r\n            <div className=\"left__users\">\r\n                <h2><i class=\"fas fa-users\"></i>Users</h2>\r\n                <div>\r\n                    {users.map(user => {\r\n                    if (user._id !== id){\r\n                     return <User key = {user.id} user = {user}  selectUser = {selectUser}></User>\r\n                    }else{ return null}\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div className=\"left__rooms\">\r\n                <h2><i class=\"fab fa-houzz\"></i>Rooms <button onClick = {() => setAdd(!add)} >  <Icon className=\"fa fa-plus \" ></Icon></button> <button onClick = {() => setEdit(!edit)} >  <Icon className=\"fa fa-pen \" ></Icon></button> </h2>\r\n                <div>\r\n                    {rooms.map(room => <Room key = {room.id} edit = {edit} room = {room} selectUser = {selectUser} ></Room>)}\r\n                </div>\r\n            </div>\r\n            {add ? <Add key = 'add' cancel={cancel}></Add> : null}\r\n        </div>\r\n    )\r\n}\r\n","import React,{useEffect,useState} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport axios from 'axios'\r\nimport '../styles/Chatroom.css'\r\nexport default function Chatroom() {\r\n     const socket = useSelector(state => state.socket)\r\n     const target = useSelector(state => state.target)\r\n     const user = useSelector(state => state.user)\r\n     const roomName = useSelector(state => state.roomName)\r\n   //   const [messages,setMessages] = useState([])\r\n     const messages = useSelector(state => state.messages)\r\n     const [message,setMessage] = useState('')\r\n     const [chat,setChat] = useState([])\r\n\r\n     function send(){\r\n         sendMessage()\r\n         var targetId =target.id\r\n         var username = user.username\r\n         var userId = user.id\r\n         axios.post('/chat/message',{\r\n            content:message,\r\n            sender:userId,\r\n            senderName:username,\r\n            receiver:targetId,\r\n            date:new Date(Date.now()).toUTCString(),\r\n            roomName:roomName\r\n         })\r\n     }\r\n\r\n     function sendMessage(){\r\n      if(message !== ''){\r\n         setChat([...chat,<div key = {Date.now()} className=\"chat__message chat__messageOut\">\r\n                                 <small>You</small>\r\n                                 <p>{message}</p>\r\n         </div>])\r\n         if(target.type !== 'room'){\r\n            let targetId = target.id\r\n            socket.emit('new-message',roomName,message,targetId,user.username)\r\n         }else{\r\n            socket.emit('room-message',roomName,message,user.username)\r\n         }\r\n      }     \r\n     }\r\n       \r\n     useEffect(() => {\r\n        if(roomName !== ''){\r\n          setChat([])\r\n        } \r\n      },[roomName])\r\n \r\n     useEffect(function(){\r\n        socket.on('message-sent',function(messageIn){\r\n         if(messageIn.roomName === roomName){\r\n            if(messageIn.content !== ''){\r\n               setChat([...chat,\r\n                  <div key = {Date.now()} className=\"chat__message chat__messageIn\">\r\n                     <small>{messageIn.username}</small>\r\n                     <p>{messageIn.content}</p>\r\n                  </div>])\r\n            }     \r\n           }\r\n        })\r\n        socket.on('room-message',(roomMessage)=>{\r\n         if(roomMessage.roomId === roomName){\r\n            if(roomMessage.content !== ''){\r\n               setChat([...chat,\r\n                  <div key = {Date.now()} className=\"chat__message chat__messageIn\">\r\n                     <small>{roomMessage.username}</small>\r\n                     <p>{roomMessage.content}</p>\r\n                  </div>])\r\n            }     \r\n           }\r\n          })\r\n         },[socket,roomName,chat])\r\n\r\n         return (\r\n         <div id = 'chatRoom'>\r\n            <div id=\"chatBody\">\r\n               {\r\n               messages[0] ?    \r\n                  messages?.sort((a,b) => a > b).map(\r\n                     message => {\r\n                        return  message.sender !== user.id ? <div key = {message._id} className = 'chat__message chat__messageIn'>\r\n                                                                  <small>{message.senderName}</small> \r\n                                                                  <p>{message.content}</p>\r\n                                                               </div>\r\n                                                               : <div key = {message._id} className = 'chat__message chat__messageOut'>\r\n                                                                  <small>You</small> \r\n                                                                  <p>{message.content}</p>\r\n                                                               </div>\r\n                     }\r\n                     )\r\n                     : messages[0] === 0 ? null\r\n                                       : <div>reloading......</div>\r\n                     }\r\n                  {chat?.map( el => el)}\r\n            </div>\r\n         <div className=\"right__send\">\r\n                <input type=\"text\" onChange={(e) => {setMessage(e.target.value)}}/><button onClick = {() => send()}>Send</button>\r\n         </div>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport Chatroom from './Chatroom'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport {setMessageOut,setRoomMessage} from '../redux/actions'\r\nimport {BrowserRouter as Route,Switch} from 'react-router-dom';\r\nimport axios from 'axios'\r\nimport '../styles/Right.css'\r\n\r\n\r\nexport default function Right() {\r\n     const target = useSelector(state => state.target)\r\n     const user = useSelector(state => state.user)\r\n     const [message,setMessage] = useState('')\r\n     const dispatch = useDispatch()\r\n\r\n    \r\n    return (\r\n        <div className = 'right'>\r\n          <Switch>\r\n            <Route path = '/users/:user'>\r\n              <Chatroom></Chatroom>\r\n            </Route> \r\n            <Route path = '/rooms/:room'>\r\n              <Chatroom></Chatroom>\r\n            </Route> \r\n          </Switch>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport Nav from './Nav'\r\nimport Left from './Left'\r\nimport Right from './Right'\r\nimport {useHistory} from 'react-router'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport {setUsers,setRooms, setTarget} from '../redux/actions'\r\nimport '../styles/Home.css'\r\n\r\n\r\n\r\n\r\nexport default function Home({socket}) {\r\n     const dispatch = useDispatch()\r\n     const user = useSelector(state => state.user)\r\n     const target = useSelector(state => state.target)\r\n     const history = useHistory() \r\n   \r\n     \r\n    useEffect(() => {\r\n        if(user.state){\r\n            axios.get('/chat/rooms').then(res => {dispatch(setRooms(res.data))}).catch(err => console.log(err))\r\n            axios.get('/chat/users').then(res => {dispatch(setUsers(res.data))}).catch(err => console.log(err))\r\n        } \r\n    },[user,dispatch])\r\n\r\n \r\n    useEffect(() => {\r\n\r\n        socket.on('rooms-update',(name) => {\r\n        if(name === target.roomname){history.push('/');setTarget({id:'',roomname:'',username:'',type:''})}\r\n        axios.get('/chat/rooms').then(res => {dispatch(setRooms(res.data))}).catch(err => console.log(err))\r\n      })\r\n\r\n      socket.on('users-up',() => {\r\n        axios.get('/chat/users').then(res => {dispatch(setUsers(res.data))}).catch(err => console.log(err))\r\n      })\r\n\r\n    },[socket,target,history,dispatch])\r\n\r\n    return (\r\n        <>\r\n        {user.state \r\n            ?\r\n            <div className = 'home'>\r\n                <Nav key = 'nav '></Nav>\r\n                <div className=\"home__body\">\r\n                <Left key = 'left'></Left>\r\n                <Right key = 'right'></Right>\r\n                </div>\r\n            </div>\r\n            :\r\n            history.push('/auth')\r\n        }\r\n        </>\r\n    )\r\n}\r\n","import React , {useEffect,useState} from 'react'\r\nimport Icon from '@material-ui/core/Icon';\r\nimport '../styles/Login.css'\r\nimport axios from 'axios'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {setUser,setAlert} from '../redux/actions'\r\nimport {useHistory} from 'react-router'\r\nexport default function Login({socket}) {\r\n    const user = useSelector(state => state.user)\r\n    const [loginEmail,setLoginEmail] = useState('')\r\n    const [loginPassword,setLoginPassword] = useState('')\r\n    const [registerEmail,setRegisterEmail] = useState('')\r\n    const [registerPassword,setRegisterPassword] = useState('')\r\n    const [userName,setUserName] = useState('')\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    function switchMethod(target){\r\n        var bird = document.getElementById('login__bird')\r\n        var loginParents = document.getElementsByClassName('login__container__form')\r\n        if(!bird.classList.contains('yellowBird')){bird.classList.remove('purpleBird');bird.classList.add('yellowBird')}else{bird.classList.remove('yellowBird');bird.classList.add('purpleBird')}\r\n        for (let j = 0; j < loginParents.length; j++) {\r\n            const element = loginParents[j];\r\n            if(element === target.parentNode.parentNode){\r\n                element.style.width = '0%'\r\n                element.lastChild.classList.remove('shown')\r\n            }else{\r\n                element.style.width = '100%';\r\n                element.lastChild.classList.add('shown')\r\n                \r\n            } \r\n        }\r\n    }\r\n    useEffect(() => {\r\n            var leftForm = document.getElementsByClassName('login__left')\r\n            leftForm[0].style.width = '100%';\r\n            var loginSwitchers = document.getElementsByClassName('login__switch')\r\n               \r\n            for (let i = 0; i < loginSwitchers.length; i++) {\r\n                const element = loginSwitchers[i];\r\n                element.addEventListener('click',(e) => switchMethod(e.currentTarget))        \r\n            }\r\n    },[])\r\n\r\n    async function register(e){\r\n        e.preventDefault();\r\n        await axios.post(\"/user/register\",{\r\n            username:userName,\r\n            email:registerEmail,\r\n            password:registerPassword\r\n         }).then(res => {\r\n                const {type,message} = res.data            \r\n                dispatch(setAlert({type,message}))\r\n                var registerSpan = document.getElementsByClassName('login__switch')[1]\r\n                if(type==='success') {\r\n                   switchMethod(registerSpan)\r\n                   socket.emit('user-register')\r\n                }\r\n            })\r\n            .catch((err,message) => console.log(err,message));\r\n      }\r\n\r\n    async function login(e){\r\n        e.preventDefault();\r\n      \r\n        await axios.post(\"/user/login\",{\r\n            email:loginEmail,\r\n            password:loginPassword\r\n        }).then(res => {\r\n            const {type,message,user} = res.data     \r\n            dispatch(setAlert({type,message}))\r\n            if(user){\r\n                socket.emit('user-signin',user.id,user.username)\r\n                dispatch(setUser({...user,state:true}))\r\n                history.push('/')\r\n            }\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n        { user.state !== false  ?   history.push('/')\r\n\r\n                                :\r\n                \r\n        \r\n         <div className='login' key = 'login'>\r\n            <div className=\"login__container\">\r\n                    <Icon className=\"fa fa-kiwi-bird \" id='login__bird' ></Icon>\r\n                    <div key = 'login' className=\"login__container__form login__left login__select\">\r\n                        <h1>Log-in</h1>\r\n                        <form onSubmit = {(e) => login(e)}>\r\n                            <label htmlFor=\"loginEmail\">Email</label>\r\n                            <input name='loginEmail' type=\"email\" value={loginEmail} onChange = {(e) => setLoginEmail(e.target.value) } required/>\r\n                            <label htmlFor=\"loginPassword\">Password</label>\r\n                            <input type=\"password\" name ='loginPassword' value={loginPassword} onChange = {(e) => setLoginPassword(e.target.value)} required/>\r\n                            <button>Login</button>\r\n                        </form>\r\n                        <p>-Not registered yet <span className='login__switch'>Register</span> </p>\r\n                </div>                                     \r\n                    <div key = 'register' className=\"login__container__form login__right\">\r\n                        <h1>Register</h1>\r\n                        <form onSubmit = {(e) => register(e)}>\r\n                            <label htmlFor=\"username\">Username</label>\r\n                            <input name='username' type=\"text\" value={userName} onChange = {(e) => {setUserName(e.target.value)}} required  />\r\n                            <label htmlFor=\"registerEmail\">Email</label>\r\n                            <input name='registerEmail' type=\"email\" value={registerEmail} onChange = {(e) => setRegisterEmail(e.target.value)} required/>\r\n                            <label htmlFor=\"registerPassword\">Password</label>\r\n                            <input type=\"password\" name ='registerPassword' value={registerPassword} onChange = {(e) => setRegisterPassword(e.target.value)} required/>\r\n                            <button type='submit' >Register</button>\r\n                        </form>\r\n                        <p>-Already have an account <span className='login__switch'>Log-in</span> </p>\r\n                    </div>                 \r\n            </div>\r\n        </div>\r\n        }   \r\n        </>\r\n       \r\n    )\r\n}\r\n","import '../styles/App.css';\nimport React,{useEffect}  from 'react'\nimport Home from './Home'\nimport Login from './Login'\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom';\nimport {useDispatch,useSelector} from 'react-redux'\nimport {setTarget} from '../redux/actions'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\nexport default function App() {\n  const dispatch = useDispatch()\n  const user = useSelector(state => state.user)\n  const alert = useSelector(state => state.alert)\n  const socket = useSelector(state => state.socket)\n  useEffect(() => {\n    dispatch(setTarget({type:'',id:'',roomname:'',username:''}))\n  },[user.id,dispatch])\n\n  useEffect(() => {\n        switch (alert.type) {\n            case 'success':\n                toast.success(alert.message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    });\n                break;\n            case 'warning':\n                toast.warn(alert.message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    });\n                break;\n            case 'error':\n                toast.error(alert.message, {\n                    position: \"top-right\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    });\n                break;    \n            default:\n                break;\n        }\n       \n    },[alert])\n\n  return (\n    <div className=\"app\" id=\"app\">\n     <ToastContainer />\n        <Router>\n          <Switch>\n              <Route path = '/auth'>\n                <Login key ='login' socket = {socket}></Login>\n              </Route>\n              <Route path = '/'>\n                <Home key = 'home' socket = {socket}></Home>\n              </Route> \n          </Switch>                                    \n        </Router>\n     \n    </div>\n  )\n}\n\n\n\n","const io = require('socket.io-client');\r\nconst socket = io('http://localhost:5000/')\r\n\r\nexport let initialState=\r\n  {\r\n    socket,\r\n    user:{\r\n     state: false,\r\n     email:'',\r\n     id:'',\r\n     username:''\r\n    },\r\n\r\n    alert:{\r\n      type:'',\r\n      message:''\r\n    },\r\n\r\n    users:[],\r\n    \r\n    guests:[],\r\n\r\n    rooms:[],\r\n\r\n    target:{\r\n      type:'',\r\n      id:'',\r\n      username:'',\r\n      roomname:''\r\n    },\r\n    roomName:'',\r\n    messages:[],\r\n    chat:[]\r\n}","import {createStore} from 'redux';\r\nimport {reducer} from './reducer'\r\nexport let store = createStore(reducer)\r\n","import {initialState} from './states'\r\n\r\n\r\nexport let reducer = (state = initialState,action) => {\r\n  switch (action.type){\r\n\r\n    case 'SET_USER':\r\n      return {\r\n        ...state,\r\n        user:action.payload\r\n      }\r\n    case 'SET_ALERT':\r\n      return {\r\n        ...state,\r\n        alert:action.payload\r\n      }\r\n    case 'SET_TARGET':\r\n      return {\r\n        ...state,\r\n         target:action.payload\r\n      }\r\n    case 'SET_USERS':\r\n     return {\r\n       ...state,\r\n       users:action.payload\r\n     }\r\n    case 'SET_ROOMS':\r\n      return {\r\n        ...state,\r\n        rooms:action.payload\r\n      } \r\n      case 'SET_ROOM_NAME':\r\n        return{\r\n          ...state,\r\n          roomName:action.payload\r\n        }\r\n      case 'SET_MESSAGES':\r\n        return{\r\n          ...state,\r\n          messages:action.payload\r\n        }    \r\n      case 'SET_CHAT':\r\n        return{\r\n          ...state,\r\n          chat:action.payload\r\n        }  \r\n    default:\r\n      return state\r\n\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { Provider} from 'react-redux'\nimport {store} from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}